<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
		xmlns="http://www.springframework.org/schema/mvc"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:beans="http://www.springframework.org/schema/beans"
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
		xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
<!--	<mvc:resources mapping="/resources/**" location="/resources/" />-->
	<resources mapping="/css/**" location="/css/"/>
	<resources location="/uploadFile/" mapping="/uploadFile/**"/>

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>


	<interceptors>
		<interceptor>
			<mapping path="/member/**"/>
			<mapping path="/visitormessage/**"/>
			<exclude-mapping path="/member/signin"/>
			<exclude-mapping path="/member/signup"/>
			<exclude-mapping path="/member/logout"/>

			<beans:bean class="com.openproject.interceptor.AuthCheckInterceptor"/>
		</interceptor>
	</interceptors>


	<beans:bean
			id="dataSource"
			class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<beans:property name="driverClass" value="com.mysql.jdbc.Driver" />
		<beans:property
				name="jdbcUrl" value="jdbc:mysql://localhost/book_ex?characterEncoding=utf8" />
		<beans:property name="user" value="zerock" />
		<beans:property name="password" value="zerock" />
	</beans:bean>

	<!--mybatis 설정-->
	<beans:bean id = "sqlSeesinonFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource"/>
		<beans:property name="mapperLocations" value="classpath:mapper/*.xml"/>
	</beans:bean>

	<!--SqlSessionTemplate 빈등록-->
	<beans:bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg index="0" ref="sqlSeesinonFactory"/>
	</beans:bean>



	<!--jdbc template 설정-->
	<beans:bean
			id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate"
			p:dataSource-ref="dataSource" />

	<context:component-scan base-package="com.openproject" />
	<context:annotation-config />


		<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="defaultEncoding">
			<beans:value>utf-8</beans:value>
		</beans:property>
	</beans:bean>

	<!-- PlatformTransactionManager -->
	<beans:bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:property name="dataSource" ref="dataSource"/>
	</beans:bean>
	<!-- @Transactional 애노테이션 활성화 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
</beans:beans>
